<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.crowd.mapper.AdminMapper">
    <resultMap id="BaseResultMap" type="com.atguigu.crowd.entity.Admin">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="login" jdbcType="VARCHAR" property="login"/>
        <result column="user_pswd" jdbcType="CHAR" property="userPswd"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="create_time" jdbcType="CHAR" property="createTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, login, user_pswd, user_name, email, create_time
    </sql>
    <select id="selectAdminByKeyword" resultMap="BaseResultMap">
        select id, login, user_pswd, user_name, email, create_time
        from t_admin
        where login like concat("%", #{keyword}, "%")
           or user_name like concat("%", #{keyword}, "%")
           or email like concat("%", #{keyword}, "%")
    </select>
    <select id="selectByExample" parameterType="com.atguigu.crowd.entity.AdminExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_admin
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_admin
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from t_admin
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.atguigu.crowd.entity.AdminExample">
        delete from t_admin
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.atguigu.crowd.entity.Admin">
        insert into t_admin (id, login, user_pswd,
                             user_name, email, create_time)
        values (#{id,jdbcType=INTEGER}, #{login,jdbcType=VARCHAR}, #{userPswd,jdbcType=CHAR},
                #{userName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createTime,jdbcType=CHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.atguigu.crowd.entity.Admin">
        insert into t_admin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="login != null">
                login,
            </if>
            <if test="userPswd != null">
                user_pswd,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="login != null">
                #{login,jdbcType=VARCHAR},
            </if>
            <if test="userPswd != null">
                #{userPswd,jdbcType=CHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.atguigu.crowd.entity.AdminExample" resultType="java.lang.Long">
        select count(*) from t_admin
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_admin
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.login != null">
                login = #{record.login,jdbcType=VARCHAR},
            </if>
            <if test="record.userPswd != null">
                user_pswd = #{record.userPswd,jdbcType=CHAR},
            </if>
            <if test="record.userName != null">
                user_name = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_admin
        set id = #{record.id,jdbcType=INTEGER},
        login = #{record.login,jdbcType=VARCHAR},
        user_pswd = #{record.userPswd,jdbcType=CHAR},
        user_name = #{record.userName,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=CHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.atguigu.crowd.entity.Admin">
        update t_admin
        <set>
            <if test="login != null">
                login = #{login,jdbcType=VARCHAR},
            </if>
            <if test="userPswd != null">
                user_pswd = #{userPswd,jdbcType=CHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.atguigu.crowd.entity.Admin">
        update t_admin
        set login       = #{login,jdbcType=VARCHAR},
            user_pswd   = #{userPswd,jdbcType=CHAR},
            user_name   = #{userName,jdbcType=VARCHAR},
            email       = #{email,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=CHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>